{"ast":null,"code":"import { POKEMONS } from './mock-pokemon-list';\nimport * as i0 from \"@angular/core\";\nexport class PokemonService {\n  getPokemonList() {\n    // renvoie model\n    return POKEMONS;\n    // liste des pokémons, réencapsulée dans un service pour profiter du syst d'injection de dépendance\n  }\n\n  getPokemonById(pokemonId) {\n    return POKEMONS.find(pokemon => pokemon.id == pokemonId);\n  }\n  getPokemonTypeList() {\n    return ['Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik', 'Poison', 'Fée', 'Vol', 'Combat', 'Psy'];\n  }\n}\nPokemonService.ɵfac = function PokemonService_Factory(t) {\n  return new (t || PokemonService)();\n};\nPokemonService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PokemonService,\n  factory: PokemonService.ɵfac\n});","map":{"version":3,"names":["POKEMONS","PokemonService","getPokemonList","getPokemonById","pokemonId","find","pokemon","id","getPokemonTypeList","factory","ɵfac"],"sources":["C:\\Users\\orion\\Desktop\\github\\ng-pokemon-app\\src\\app\\pokemon\\pokemon.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Pokemon } from './pokemon';\nimport { POKEMONS } from './mock-pokemon-list';\n\n@Injectable(\n  // {\n  // décorateur permet d'indiquer à Angular que notre service peut lui même avoir d'autres dépendances. Pour brancher ce service avec le mécanisms d'injection de dépendances d'Angular.\n  // providedIn: 'root'// retiré pour n'être injecté que dans le module considéré\n  // cette ppt indique à Angular que l'on veut utiliser la même instance du service à travers toute l'app. Nous ne créerons jamais d'instance nous même\n// }\n)\nexport class PokemonService {\n\n  getPokemonList(): Pokemon [] {\n    // renvoie model\n    return POKEMONS;\n    // liste des pokémons, réencapsulée dans un service pour profiter du syst d'injection de dépendance\n  }\n\n  getPokemonById(pokemonId :number): Pokemon | undefined {\n    return POKEMONS.find(pokemon => pokemon.id == pokemonId);\n  }\n\n  getPokemonTypeList(): string[] {\n    return [\n      'Plante', \n      'Feu', \n      'Eau', \n      'Insecte', \n      'Normal', \n      'Electrik', \n      'Poison', \n      'Fée', \n      'Vol', \n      'Combat', \n      'Psy'\n    ]; \n  }\n  \n}\n"],"mappings":"AAEA,SAASA,QAAQ,QAAQ,qBAAqB;;AAS9C,OAAM,MAAOC,cAAc;EAEzBC,cAAcA,CAAA;IACZ;IACA,OAAOF,QAAQ;IACf;EACF;;EAEAG,cAAcA,CAACC,SAAiB;IAC9B,OAAOJ,QAAQ,CAACK,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,EAAE,IAAIH,SAAS,CAAC;EAC1D;EAEAI,kBAAkBA,CAAA;IAChB,OAAO,CACL,QAAQ,EACR,KAAK,EACL,KAAK,EACL,SAAS,EACT,QAAQ,EACR,UAAU,EACV,QAAQ,EACR,KAAK,EACL,KAAK,EACL,QAAQ,EACR,KAAK,CACN;EACH;;AA1BWP,cAAc,C;mBAAdA,cAAc;AAAA;AAAdA,cAAc,C;SAAdA,cAAc;EAAAQ,OAAA,EAAdR,cAAc,CAAAS;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}