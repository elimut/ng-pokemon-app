{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { NgModule } from '@angular/core';\n// équivalent de l'importation component du coeur du framework angular utilisé avec @NgModule pour déclarer un module auprès d'angular\nimport { BrowserModule } from '@angular/platform-browser';\n// module qui fourni les éléments essentiels pour le fonctionnement de l'app\nimport { AppRoutingModule } from './app-routing.module';\n// import du fichier qui contient les routes du projet\nimport { AppComponent } from './app.component';\n// import du composant dans le module racine\nimport { BorderCardDirective } from './border-card.directive';\nimport { PokemonTypeColorPipe } from './pokemon-type-color.pipe';\nimport { ListPokemonComponent } from './list-pokemon/list-pokemon.component';\nimport { DetailPokemonComponent } from './detail-pokemon/detail-pokemon.component';\nexport let AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  declarations: [\n  // déclarations d'une liste de tous les components, directives, pipes... qui appartiennent au module pour fonctionner\n  AppComponent, BorderCardDirective, PokemonTypeColorPipe, ListPokemonComponent, DetailPokemonComponent],\n  imports: [\n  // déclaration ds éléments nécessaires au module mais qui sont d'autres modules \n  BrowserModule, AppRoutingModule],\n  providers: [],\n  // utilisation du système d'injection des dépendances Angular, il existe d'autres manières aujourd'hui \n  bootstrap: [AppComponent]\n  // propre au module racine = boostrap composant racine. Permet de dire à angular quel est le premier composant qui doit démarrer lorsque l'user charge l'application dans son nav\n})], AppModule);","map":{"version":3,"names":["NgModule","BrowserModule","AppRoutingModule","AppComponent","BorderCardDirective","PokemonTypeColorPipe","ListPokemonComponent","DetailPokemonComponent","AppModule","__decorate","declarations","imports","providers","bootstrap"],"sources":["C:\\Users\\utilisateur\\Desktop\\GIT\\ng-pokemon-app\\src\\app\\app.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\n// équivalent de l'importation component du coeur du framework angular utilisé avec @NgModule pour déclarer un module auprès d'angular\nimport { BrowserModule } from '@angular/platform-browser';\n// module qui fourni les éléments essentiels pour le fonctionnement de l'app\n\nimport { AppRoutingModule } from './app-routing.module';\n// import du fichier qui contient les routes du projet\nimport { AppComponent } from './app.component';\n// import du composant dans le module racine\nimport { BorderCardDirective } from './border-card.directive';\nimport { PokemonTypeColorPipe } from './pokemon-type-color.pipe';\nimport { ListPokemonComponent } from './list-pokemon/list-pokemon.component';\nimport { DetailPokemonComponent } from './detail-pokemon/detail-pokemon.component';\n\n\n@NgModule({\n  declarations: [\n    // déclarations d'une liste de tous les components, directives, pipes... qui appartiennent au module pour fonctionner\n    AppComponent,\n    BorderCardDirective,\n    PokemonTypeColorPipe,\n    ListPokemonComponent,\n    DetailPokemonComponent\n  ],\n  imports: [\n    // déclaration ds éléments nécessaires au module mais qui sont d'autres modules \n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  // utilisation du système d'injection des dépendances Angular, il existe d'autres manières aujourd'hui \n  bootstrap: [AppComponent]\n  // propre au module racine = boostrap composant racine. Permet de dire à angular quel est le premier composant qui doit démarrer lorsque l'user charge l'application dans son nav\n})\nexport class AppModule { }\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,eAAe;AACxC;AACA,SAASC,aAAa,QAAQ,2BAA2B;AACzD;AAEA,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD;AACA,SAASC,YAAY,QAAQ,iBAAiB;AAC9C;AACA,SAASC,mBAAmB,QAAQ,yBAAyB;AAC7D,SAASC,oBAAoB,QAAQ,2BAA2B;AAChE,SAASC,oBAAoB,QAAQ,uCAAuC;AAC5E,SAASC,sBAAsB,QAAQ,2CAA2C;AAsB3E,WAAMC,SAAS,GAAf,MAAMA,SAAS,GAAI;AAAbA,SAAS,GAAAC,UAAA,EAnBrBT,QAAQ,CAAC;EACRU,YAAY,EAAE;EACZ;EACAP,YAAY,EACZC,mBAAmB,EACnBC,oBAAoB,EACpBC,oBAAoB,EACpBC,sBAAsB,CACvB;EACDI,OAAO,EAAE;EACP;EACAV,aAAa,EACbC,gBAAgB,CACjB;EACDU,SAAS,EAAE,EAAE;EACb;EACAC,SAAS,EAAE,CAACV,YAAY;EACxB;CACD,CAAC,C,EACWK,SAAS,CAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}