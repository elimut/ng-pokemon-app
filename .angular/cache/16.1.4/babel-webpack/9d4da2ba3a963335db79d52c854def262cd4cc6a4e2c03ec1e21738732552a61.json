{"ast":null,"code":"import { POKEMONS } from '../mock-pokemon-list';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../border-card.directive\";\nimport * as i4 from \"../pokemon-type-color.pipe\";\nfunction ListPokemonComponent_div_2_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵpipe(1, \"pokemonTypeColor\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r3 = ctx.$implicit;\n    i0.ɵɵclassMap(i0.ɵɵpipeBind1(1, 4, type_r3));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", type_r3, \" \");\n  }\n}\nfunction ListPokemonComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4);\n    i0.ɵɵlistener(\"click\", function ListPokemonComponent_div_2_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const pokemon_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.goToPokemon(pokemon_r1));\n    });\n    i0.ɵɵelementStart(2, \"div\", 5);\n    i0.ɵɵelement(3, \"img\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 7)(5, \"div\", 8)(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"uppercase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\")(10, \"small\");\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(13, ListPokemonComponent_div_2_span_13_Template, 3, 6, \"span\", 9);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const pokemon_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"src\", pokemon_r1.picture, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 4, pokemon_r1.name));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(12, 6, pokemon_r1.created, \"dd/MM/yyyy\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", pokemon_r1.types);\n  }\n}\nexport class ListPokemonComponent {\n  constructor(router) {\n    this.router = router;\n    this.pokemonList = POKEMONS;\n  }\n  goToPokemon(pokemon) {\n    this.router.navigate(['/pokemon', pokemon.id]);\n  }\n}\nListPokemonComponent.ɵfac = function ListPokemonComponent_Factory(t) {\n  return new (t || ListPokemonComponent)(i0.ɵɵdirectiveInject(i1.Router));\n};\nListPokemonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListPokemonComponent,\n  selectors: [[\"app-list-pokemon\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"row\"], [\"class\", \"col m4 s6\", 4, \"ngFor\", \"ngForOf\"], [1, \"col\", \"m4\", \"s6\"], [\"appBorderCard\", \"\", 1, \"card\", \"horizontal\", \"pink\", \"lighten-4\", \"z-depth-3\", 3, \"click\"], [1, \"card-image\"], [\"alt\", \"Pokemon image\", 3, \"src\"], [1, \"card-stacked\"], [1, \"card-content\"], [3, \"class\", 4, \"ngFor\", \"ngForOf\"]],\n  template: function ListPokemonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, ListPokemonComponent_div_2_Template, 14, 9, \"div\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.pokemonList);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.BorderCardDirective, i2.UpperCasePipe, i2.DatePipe, i4.PokemonTypeColorPipe],\n  encapsulation: 2\n});","map":{"version":3,"names":["POKEMONS","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵclassMap","ɵɵpipeBind1","type_r3","ɵɵadvance","ɵɵtextInterpolate1","ɵɵlistener","ListPokemonComponent_div_2_Template_div_click_1_listener","restoredCtx","ɵɵrestoreView","_r5","pokemon_r1","$implicit","ctx_r4","ɵɵnextContext","ɵɵresetView","goToPokemon","ɵɵelement","ɵɵtemplate","ListPokemonComponent_div_2_span_13_Template","ɵɵpropertyInterpolate","picture","ɵɵsanitizeUrl","ɵɵtextInterpolate","name","ɵɵpipeBind2","created","ɵɵproperty","types","ListPokemonComponent","constructor","router","pokemonList","pokemon","navigate","id","ɵɵdirectiveInject","i1","Router","selectors","decls","vars","consts","template","ListPokemonComponent_Template","rf","ctx","ListPokemonComponent_div_2_Template"],"sources":["C:\\Users\\orion\\Desktop\\github\\ng-pokemon-app\\src\\app\\pokemon\\list-pokemon\\list-pokemon.component.ts","C:\\Users\\orion\\Desktop\\github\\ng-pokemon-app\\src\\app\\pokemon\\list-pokemon\\list-pokemon.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { POKEMONS } from '../mock-pokemon-list';\r\nimport { Pokemon } from '../pokemon';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-list-pokemon',\r\n  templateUrl: './list-pokemon.component.html',\r\n})\r\nexport class ListPokemonComponent {\r\n\r\n  pokemonList: Pokemon[] = POKEMONS; \r\n\r\n  constructor(private router: Router) {}\r\n\r\n  goToPokemon(pokemon: Pokemon) {\r\n    this.router.navigate(['/pokemon', pokemon.id]);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div *ngFor=\"let pokemon of pokemonList\" class=\"col m4 s6\">\r\n            <div (click)=\"goToPokemon(pokemon)\" class=\"card horizontal pink lighten-4 z-depth-3\" appBorderCard>\r\n                <div class=\"card-image\">\r\n                    <img src=\"{{ pokemon.picture }}\" alt=\"Pokemon image\">\r\n                </div>\r\n                <div class=\"card-stacked\">\r\n                    <div class=\"card-content\">\r\n                        <p>{{ pokemon.name | uppercase}}</p>\r\n                        <p><small>{{ pokemon.created | date:\"dd/MM/yyyy\" }}</small></p>\r\n                        <span \r\n                        *ngFor=\"let type of pokemon.types\" \r\n                        class=\"{{ type | pokemonTypeColor }}\">\r\n                        \r\n                            {{ type }}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"],"mappings":"AACA,SAASA,QAAQ,QAAQ,sBAAsB;;;;;;;;ICUvBC,EAAA,CAAAC,cAAA,WAEsC;;IAElCD,EAAA,CAAAE,MAAA,GACJ;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;IAHPH,EAAA,CAAAI,UAAA,CAAAJ,EAAA,CAAAK,WAAA,OAAAC,OAAA,EAAqC;IAEjCN,EAAA,CAAAO,SAAA,GACJ;IADIP,EAAA,CAAAQ,kBAAA,MAAAF,OAAA,MACJ;;;;;;IAdhBN,EAAA,CAAAC,cAAA,aAA2D;IAClDD,EAAA,CAAAS,UAAA,mBAAAC,yDAAA;MAAA,MAAAC,WAAA,GAAAX,EAAA,CAAAY,aAAA,CAAAC,GAAA;MAAA,MAAAC,UAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAhB,EAAA,CAAAiB,aAAA;MAAA,OAASjB,EAAA,CAAAkB,WAAA,CAAAF,MAAA,CAAAG,WAAA,CAAAL,UAAA,CAAoB;IAAA,EAAC;IAC/Bd,EAAA,CAAAC,cAAA,aAAwB;IACpBD,EAAA,CAAAoB,SAAA,aAAqD;IACzDpB,EAAA,CAAAG,YAAA,EAAM;IACNH,EAAA,CAAAC,cAAA,aAA0B;IAEfD,EAAA,CAAAE,MAAA,GAA6B;;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACpCH,EAAA,CAAAC,cAAA,QAAG;IAAOD,EAAA,CAAAE,MAAA,IAAyC;;IAAAF,EAAA,CAAAG,YAAA,EAAQ;IAC3DH,EAAA,CAAAqB,UAAA,KAAAC,2CAAA,kBAKO;IACXtB,EAAA,CAAAG,YAAA,EAAM;;;;IAZDH,EAAA,CAAAO,SAAA,GAA2B;IAA3BP,EAAA,CAAAuB,qBAAA,QAAAT,UAAA,CAAAU,OAAA,EAAAxB,EAAA,CAAAyB,aAAA,CAA2B;IAIzBzB,EAAA,CAAAO,SAAA,GAA6B;IAA7BP,EAAA,CAAA0B,iBAAA,CAAA1B,EAAA,CAAAK,WAAA,OAAAS,UAAA,CAAAa,IAAA,EAA6B;IACtB3B,EAAA,CAAAO,SAAA,GAAyC;IAAzCP,EAAA,CAAA0B,iBAAA,CAAA1B,EAAA,CAAA4B,WAAA,QAAAd,UAAA,CAAAe,OAAA,gBAAyC;IAElC7B,EAAA,CAAAO,SAAA,GAAgB;IAAhBP,EAAA,CAAA8B,UAAA,YAAAhB,UAAA,CAAAiB,KAAA,CAAgB;;;ADHzD,OAAM,MAAOC,oBAAoB;EAI/BC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAF1B,KAAAC,WAAW,GAAcpC,QAAQ;EAEI;EAErCoB,WAAWA,CAACiB,OAAgB;IAC1B,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,UAAU,EAAED,OAAO,CAACE,EAAE,CAAC,CAAC;EAChD;;AARWN,oBAAoB,C;mBAApBA,oBAAoB,EAAAhC,EAAA,CAAAuC,iBAAA,CAAAC,EAAA,CAAAC,MAAA;AAAA;AAApBT,oBAAoB,C;QAApBA,oBAAoB;EAAAU,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCTjChD,EAAA,CAAAC,cAAA,aAAuB;MAEfD,EAAA,CAAAqB,UAAA,IAAA6B,mCAAA,kBAkBM;MACVlD,EAAA,CAAAG,YAAA,EAAM;;;MAnBuBH,EAAA,CAAAO,SAAA,GAAc;MAAdP,EAAA,CAAA8B,UAAA,YAAAmB,GAAA,CAAAd,WAAA,CAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}