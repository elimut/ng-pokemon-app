{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_a_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 13);\n    i0.ɵɵlistener(\"click\", function LoginComponent_a_20_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.login());\n    });\n    i0.ɵɵtext(1, \"Se connecter\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_a_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 14);\n    i0.ɵɵlistener(\"click\", function LoginComponent_a_21_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.logout());\n    });\n    i0.ɵɵtext(1, \"Se d\\u00E9connecter\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.message = 'Vous êtes déconnecté.';\n  }\n  ngOnInit() {\n    this.auth = this.authService;\n    // restock authService à l'init car on l'utilise dans le template directement\n  }\n\n  setMessage() {\n    if (this.auth.isLoggedIn) {\n      this.message = 'Vous êtes connecté.';\n    } else {\n      this.message = 'Identifiant ou mot de passe incorrect.';\n    }\n  }\n  login() {\n    this.message = 'Tentative de connexion en cours...';\n    this.auth.login(this.name, this.password).subscribe({\n      next: isLoggedIn => {\n        this.setMessage();\n        if (isLoggedIn) {\n          this.router.navigate(['/pokemons']);\n        } else {\n          this.password = '';\n          // reinit mdp si erreur\n          this.router.navigate(['/login']);\n        }\n      }\n    });\n  }\n  // quand user soumet le form de connexion, login => afficher un msg tentative de co en cours\n  // appel méthode authService pour véirifer si à le droit où non d'accèder aux données, on reçoit un flux contenant un bool\n  // message mis à jour en fonction du rst de co\n  logout() {\n    this.auth.logout;\n    this.message = 'Vous êtes déconnecté.';\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 22,\n  vars: 5,\n  consts: [[1, \"row\"], [1, \"col\", \"s12\", \"m4\", \"offset-m4\"], [1, \"card\", \"hoverable\"], [1, \"card-content\", \"center\"], [1, \"card-title\"], [\"loginForm\", \"ngForm\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"card-action\", \"center\"], [\"class\", \"waves-effect waves-light btn\", 3, \"click\", 4, \"ngIf\"], [3, \"click\", 4, \"ngIf\"], [1, \"waves-effect\", \"waves-light\", \"btn\", 3, \"click\"], [3, \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"span\", 4);\n      i0.ɵɵtext(5, \"Page de connexion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"p\")(7, \"em\");\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"form\", null, 5)(11, \"div\")(12, \"label\", 6);\n      i0.ɵɵtext(13, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\")(16, \"label\", 8);\n      i0.ɵɵtext(17, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"div\", 10);\n      i0.ɵɵtemplate(20, LoginComponent_a_20_Template, 2, 0, \"a\", 11);\n      i0.ɵɵtemplate(21, LoginComponent_a_21_Template, 2, 0, \"a\", 12);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵtextInterpolate(ctx.message);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.authService.isLoggedIn);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.authService.isLoggedIn);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","LoginComponent_a_20_Template_a_click_0_listener","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","login","ɵɵtext","ɵɵelementEnd","LoginComponent_a_21_Template_a_click_0_listener","_r6","ctx_r5","logout","LoginComponent","constructor","authService","router","message","ngOnInit","auth","setMessage","isLoggedIn","name","password","subscribe","next","navigate","ɵɵdirectiveInject","i1","AuthService","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","LoginComponent_Template_input_ngModelChange_14_listener","$event","LoginComponent_Template_input_ngModelChange_18_listener","ɵɵtemplate","LoginComponent_a_20_Template","LoginComponent_a_21_Template","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty"],"sources":["C:\\Users\\orion\\Desktop\\github\\ng-pokemon-app\\src\\app\\login\\login.component.ts","C:\\Users\\orion\\Desktop\\github\\ng-pokemon-app\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styles: [\n  ]\n})\nexport class LoginComponent {\n\n  message: string = 'Vous êtes déconnecté.';\n  name: string;\n  password: string;\n  isLoggedIn: boolean;\n  auth: AuthService;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n    ) {\n\n  }\n\n  ngOnInit(): void {\n    this.auth = this.authService;\n    // restock authService à l'init car on l'utilise dans le template directement\n\n  }\n\n  setMessage() {\n    if(this.auth.isLoggedIn) {\n      this.message = 'Vous êtes connecté.';\n    } else {\n      this.message = 'Identifiant ou mot de passe incorrect.'\n    }\n  }\n\n  login() {\n    this.message = 'Tentative de connexion en cours...';\n    this.auth.login(this.name, this.password)\n      .subscribe({\n        next: isLoggedIn => {\n          this.setMessage();\n          if(isLoggedIn) {\n            this.router.navigate(['/pokemons']);\n          } else {\n            this.password ='';\n            // reinit mdp si erreur\n            this.router.navigate(['/login']);\n          }\n        }\n      })\n  }\n  // quand user soumet le form de connexion, login => afficher un msg tentative de co en cours\n  // appel méthode authService pour véirifer si à le droit où non d'accèder aux données, on reçoit un flux contenant un bool\n  // message mis à jour en fonction du rst de co\n\n  logout() {\n    this.auth.logout;\n    this.message = 'Vous êtes déconnecté.'\n  }\n}\n","<div class='row'>\n    <div class=\"col s12 m4 offset-m4\">\n    <div class=\"card hoverable\">\n      <div class=\"card-content center\">\n        <span class=\"card-title\">Page de connexion</span>\n        <p><em>{{ message }}</em></p>\n      </div>\n            <form #loginForm=\"ngForm\">\n          <div>\n                    <label for=\"name\">Name</label>\n            <input type=\"text\" id=\"name\" [(ngModel)]=\"name\" name=\"name\" required>\n          </div>\n          <div>\n            <label for=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" [(ngModel)]=\"password\" name=\"password\" required>\n          </div>\n        </form>\n      <div class=\"card-action center\">\n        <a (click)=\"login()\" class=\"waves-effect waves-light btn\"  *ngIf=\"!authService.isLoggedIn\">Se connecter</a>\n        <a (click)=\"logout()\" *ngIf=\"authService.isLoggedIn\">Se déconnecter</a>\n      </div>\n    </div>\n    </div>\n    </div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}