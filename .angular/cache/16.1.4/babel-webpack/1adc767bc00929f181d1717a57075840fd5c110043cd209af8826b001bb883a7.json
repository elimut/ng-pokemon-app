{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { NgModule } from '@angular/core';\n// équivalent de l'importation component du coeur du framework angular utilisé avec @NgModule pour déclarer un module auprès d'angular\nimport { BrowserModule } from '@angular/platform-browser';\n// module qui fourni les éléments essentiels pour le fonctionnement de l'app\nimport { AppRoutingModule } from './app-routing.module';\n// import du fichier qui contient les routes du projet\nimport { AppComponent } from './app.component';\n// import du composant dans le module racine\n// import { BorderCardDirective } from './pokemon/border-card.directive';\n// import { PokemonTypeColorPipe } from './pokemon/pokemon-type-color.pipe';\n// import { ListPokemonComponent } from './list-pokemon/list-pokemon.component';\n// import { DetailPokemonComponent } from './pokemon/detail-pokemon/detail-pokemon.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { PokemonModule } from './pokemon/pokemon.module';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { InMemoryDataService } from './in-memory-data.service';\nexport let AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  declarations: [\n  // déclarations d'une liste de tous les components, directives, pipes... qui appartiennent au module pour fonctionner\n  AppComponent,\n  // BorderCardDirective,\n  // PokemonTypeColorPipe,\n  // ListPokemonComponent,\n  // DetailPokemonComponent,\n  PageNotFoundComponent],\n  imports: [\n  // déclaration ds éléments nécessaires au module mais qui sont d'autres modules \n  BrowserModule, FormsModule, HttpClientModule, HttpClientInMemoryWebApiModule.forRoot(InMemoryDataService, {\n    dataEncapsulation: false\n  }), PokemonModule, AppRoutingModule],\n  providers: [],\n  // utilisation du système d'injection des dépendances Angular, il existe d'autres manières aujourd'hui \n  bootstrap: [AppComponent]\n  // propre au module racine = boostrap composant racine. Permet de dire à angular quel est le premier composant qui doit démarrer lorsque l'user charge l'application dans son nav\n})], AppModule);","map":{"version":3,"names":["NgModule","BrowserModule","AppRoutingModule","AppComponent","PageNotFoundComponent","PokemonModule","FormsModule","HttpClientModule","InMemoryDataService","AppModule","__decorate","declarations","imports","HttpClientInMemoryWebApiModule","forRoot","dataEncapsulation","providers","bootstrap"],"sources":["C:\\Users\\orion\\Desktop\\github\\ng-pokemon-app\\src\\app\\app.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\n// équivalent de l'importation component du coeur du framework angular utilisé avec @NgModule pour déclarer un module auprès d'angular\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n// module qui fourni les éléments essentiels pour le fonctionnement de l'app\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\n// import du fichier qui contient les routes du projet\r\nimport { AppComponent } from './app.component';\r\n// import du composant dans le module racine\r\n// import { BorderCardDirective } from './pokemon/border-card.directive';\r\n// import { PokemonTypeColorPipe } from './pokemon/pokemon-type-color.pipe';\r\n// import { ListPokemonComponent } from './list-pokemon/list-pokemon.component';\r\n// import { DetailPokemonComponent } from './pokemon/detail-pokemon/detail-pokemon.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { PokemonModule } from './pokemon/pokemon.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport{ HttpClientInMmeory}\r\nimport { InMemoryDataService } from './in-memory-data.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    // déclarations d'une liste de tous les components, directives, pipes... qui appartiennent au module pour fonctionner\r\n    AppComponent,\r\n    // BorderCardDirective,\r\n    // PokemonTypeColorPipe,\r\n    // ListPokemonComponent,\r\n    // DetailPokemonComponent,\r\n    PageNotFoundComponent\r\n  ],\r\n  imports: [\r\n    // déclaration ds éléments nécessaires au module mais qui sont d'autres modules \r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    HttpClientInMemoryWebApiModule.forRoot(InMemoryDataService, { dataEncapsulation: false}),\r\n    PokemonModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  // utilisation du système d'injection des dépendances Angular, il existe d'autres manières aujourd'hui \r\n  bootstrap: [AppComponent]\r\n  // propre au module racine = boostrap composant racine. Permet de dire à angular quel est le premier composant qui doit démarrer lorsque l'user charge l'application dans son nav\r\n})\r\nexport class AppModule { }\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,eAAe;AACxC;AACA,SAASC,aAAa,QAAQ,2BAA2B;AACzD;AAEA,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD;AACA,SAASC,YAAY,QAAQ,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA,SAASC,qBAAqB,QAAQ,2CAA2C;AACjF,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,gBAAgB,QAAQ,sBAAsB;AAEvD,SAASC,mBAAmB,QAAQ,0BAA0B;AA2BvD,WAAMC,SAAS,GAAf,MAAMA,SAAS,GAAI;AAAbA,SAAS,GAAAC,UAAA,EAxBrBV,QAAQ,CAAC;EACRW,YAAY,EAAE;EACZ;EACAR,YAAY;EACZ;EACA;EACA;EACA;EACAC,qBAAqB,CACtB;EACDQ,OAAO,EAAE;EACP;EACAX,aAAa,EACbK,WAAW,EACXC,gBAAgB,EAChBM,8BAA8B,CAACC,OAAO,CAACN,mBAAmB,EAAE;IAAEO,iBAAiB,EAAE;EAAK,CAAC,CAAC,EACxFV,aAAa,EACbH,gBAAgB,CACjB;EACDc,SAAS,EAAE,EAAE;EACb;EACAC,SAAS,EAAE,CAACd,YAAY;EACxB;CACD,CAAC,C,EACWM,SAAS,CAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}