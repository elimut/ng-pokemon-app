{"ast":null,"code":"// équivalent de l'importation component du coeur du framework angular utilisé avec @NgModule pour déclarer un module auprès d'angular\nimport { BrowserModule } from '@angular/platform-browser';\n// module qui fourni les éléments essentiels pour le fonctionnement de l'app\nimport { AppRoutingModule } from './app-routing.module';\n// import du fichier qui contient les routes du projet\nimport { AppComponent } from './app.component';\n// import du composant dans le module racine\n// import { BorderCardDirective } from './pokemon/border-card.directive';\n// import { PokemonTypeColorPipe } from './pokemon/pokemon-type-color.pipe';\n// import { ListPokemonComponent } from './list-pokemon/list-pokemon.component';\n// import { DetailPokemonComponent } from './pokemon/detail-pokemon/detail-pokemon.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { PokemonModule } from './pokemon/pokemon.module';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nexport class AppModule {}\nAppModule.ɵfac = function AppModule_Factory(t) {\n  return new (t || AppModule)();\n};\nAppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppModule,\n  bootstrap: [AppComponent]\n});\nAppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [\n  // déclaration ds éléments nécessaires au module mais qui sont d'autres modules \n  BrowserModule, FormsModule, PokemonModule, AppRoutingModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [\n    // déclarations d'une liste de tous les components, directives, pipes... qui appartiennent au module pour fonctionner\n    AppComponent,\n    // BorderCardDirective,\n    // PokemonTypeColorPipe,\n    // ListPokemonComponent,\n    // DetailPokemonComponent,\n    PageNotFoundComponent],\n    imports: [\n    // déclaration ds éléments nécessaires au module mais qui sont d'autres modules \n    BrowserModule, FormsModule, PokemonModule, AppRoutingModule]\n  });\n})();","map":{"version":3,"names":["BrowserModule","AppRoutingModule","AppComponent","PageNotFoundComponent","PokemonModule","FormsModule","AppModule","bootstrap","declarations","imports"],"sources":["C:\\Users\\utilisateur\\Desktop\\GIT\\ng-pokemon-app\\src\\app\\app.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\n// équivalent de l'importation component du coeur du framework angular utilisé avec @NgModule pour déclarer un module auprès d'angular\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n// module qui fourni les éléments essentiels pour le fonctionnement de l'app\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\n// import du fichier qui contient les routes du projet\r\nimport { AppComponent } from './app.component';\r\n// import du composant dans le module racine\r\n// import { BorderCardDirective } from './pokemon/border-card.directive';\r\n// import { PokemonTypeColorPipe } from './pokemon/pokemon-type-color.pipe';\r\n// import { ListPokemonComponent } from './list-pokemon/list-pokemon.component';\r\n// import { DetailPokemonComponent } from './pokemon/detail-pokemon/detail-pokemon.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { PokemonModule } from './pokemon/pokemon.module';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    // déclarations d'une liste de tous les components, directives, pipes... qui appartiennent au module pour fonctionner\r\n    AppComponent,\r\n    // BorderCardDirective,\r\n    // PokemonTypeColorPipe,\r\n    // ListPokemonComponent,\r\n    // DetailPokemonComponent,\r\n    PageNotFoundComponent\r\n  ],\r\n  imports: [\r\n    // déclaration ds éléments nécessaires au module mais qui sont d'autres modules \r\n    BrowserModule,\r\n    FormsModule,\r\n    PokemonModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  // utilisation du système d'injection des dépendances Angular, il existe d'autres manières aujourd'hui \r\n  bootstrap: [AppComponent]\r\n  // propre au module racine = boostrap composant racine. Permet de dire à angular quel est le premier composant qui doit démarrer lorsque l'user charge l'application dans son nav\r\n})\r\nexport class AppModule { }\r\n"],"mappings":"AACA;AACA,SAASA,aAAa,QAAQ,2BAA2B;AACzD;AAEA,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD;AACA,SAASC,YAAY,QAAQ,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA,SAASC,qBAAqB,QAAQ,2CAA2C;AACjF,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,WAAW,QAAQ,gBAAgB;;AAyB5C,OAAM,MAAOC,SAAS;AAATA,SAAS,C;mBAATA,SAAS;AAAA;AAATA,SAAS,C;QAATA,SAAS;EAAAC,SAAA,GAHRL,YAAY;AAAA;AAGbI,SAAS,C;;EAXlB;EACAN,aAAa,EACbK,WAAW,EACXD,aAAa,EACbH,gBAAgB;AAAA;;2EAOPK,SAAS;IAAAE,YAAA;IApBlB;IACAN,YAAY;IACZ;IACA;IACA;IACA;IACAC,qBAAqB;IAAAM,OAAA;IAGrB;IACAT,aAAa,EACbK,WAAW,EACXD,aAAa,EACbH,gBAAgB;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}