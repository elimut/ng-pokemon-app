{"ast":null,"code":"import * as i0 from \"@angular/core\";\n/*\n * Affiche la couleur correspondant au type du pokémon.\n * Prend en argument le type du pokémon.\n * Exemple d'utilisation:\n *   {{ pokemon.type | pokemonTypeColor }}\n*/\nexport class PokemonTypeColorPipe {\n  transform(type) {\n    // ajoutée par l'interface pipeTransform, rend en entrée une valeur => sur laquelle on applique le pipe et renvoie la donnée tranformée.\n    // type string tranfo en une classe string\n    let color;\n    switch (type) {\n      case 'Feu':\n        color = 'red lighten-1';\n        break;\n      case 'Eau':\n        color = 'blue lighten-1';\n        break;\n      case 'Plante':\n        color = 'green lighten-1';\n        break;\n      case 'Insecte':\n        color = 'brown lighten-1';\n        break;\n      case 'Normal':\n        color = 'grey lighten-3';\n        break;\n      case 'Vol':\n        color = 'blue lighten-3';\n        break;\n      case 'Poison':\n        color = 'deep-purple accent-1';\n        break;\n      case 'Fée':\n        color = 'pink lighten-6';\n        break;\n      case 'Psy':\n        color = 'deep-purple darken-2';\n        break;\n      case 'Electrik':\n        color = 'lime accent-1';\n        break;\n      case 'Combat':\n        color = 'deep-orange';\n        break;\n      default:\n        color = 'grey';\n        break;\n    }\n    return 'chip ' + color;\n    // retour d'une classe qui vient de materialize, on va combinerune classe qui s'appelle chip, petit rond de couleur avec la couleur en focntion du type.\n  }\n}\n\nPokemonTypeColorPipe.ɵfac = function PokemonTypeColorPipe_Factory(t) {\n  return new (t || PokemonTypeColorPipe)();\n};\nPokemonTypeColorPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"pokemonTypeColor\",\n  type: PokemonTypeColorPipe,\n  pure: true\n});","map":{"version":3,"names":["PokemonTypeColorPipe","transform","type","color","pure"],"sources":["C:\\Users\\orion\\Desktop\\github\\ng-pokemon-app\\src\\app\\pokemon-type-color.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n  \r\n/*\r\n * Affiche la couleur correspondant au type du pokémon.\r\n * Prend en argument le type du pokémon.\r\n * Exemple d'utilisation:\r\n *   {{ pokemon.type | pokemonTypeColor }}\r\n*/\r\n@Pipe({name: 'pokemonTypeColor'})\r\nexport class PokemonTypeColorPipe implements PipeTransform {\r\n  transform(type: string): string {\r\n      // ajoutée par l'interface pipeTransform, rend en entrée une valeur => sur laquelle on applique le pipe et renvoie la donnée tranformée.\r\n      // type string tranfo en une classe string\r\n    let color: string;\r\n  \r\n    switch (type) {\r\n      case 'Feu':\r\n        color = 'red lighten-1';\r\n        break;\r\n      case 'Eau':\r\n        color = 'blue lighten-1';\r\n        break;\r\n      case 'Plante':\r\n        color = 'green lighten-1';\r\n        break;\r\n      case 'Insecte':\r\n        color = 'brown lighten-1';\r\n        break;\r\n      case 'Normal':\r\n        color = 'grey lighten-3';\r\n        break;\r\n      case 'Vol':\r\n        color = 'blue lighten-3';\r\n        break;\r\n      case 'Poison':\r\n        color = 'deep-purple accent-1';\r\n        break;\r\n      case 'Fée':\r\n        color = 'pink lighten-6';\r\n        break;\r\n      case 'Psy':\r\n        color = 'deep-purple darken-2';\r\n        break;\r\n      case 'Electrik':\r\n        color = 'lime accent-1';\r\n        break;\r\n      case 'Combat':\r\n        color = 'deep-orange';\r\n        break;\r\n      default:\r\n        color = 'grey';\r\n        break;\r\n    }\r\n  \r\n    return 'chip ' + color;\r\n  // retour d'une classe qui vient de materialize, on va combinerune classe qui s'appelle chip, petit rond de couleur avec la couleur en focntion du type.\r\n  }\r\n}"],"mappings":";AAEA;;;;;;AAOA,OAAM,MAAOA,oBAAoB;EAC/BC,SAASA,CAACC,IAAY;IAClB;IACA;IACF,IAAIC,KAAa;IAEjB,QAAQD,IAAI;MACV,KAAK,KAAK;QACRC,KAAK,GAAG,eAAe;QACvB;MACF,KAAK,KAAK;QACRA,KAAK,GAAG,gBAAgB;QACxB;MACF,KAAK,QAAQ;QACXA,KAAK,GAAG,iBAAiB;QACzB;MACF,KAAK,SAAS;QACZA,KAAK,GAAG,iBAAiB;QACzB;MACF,KAAK,QAAQ;QACXA,KAAK,GAAG,gBAAgB;QACxB;MACF,KAAK,KAAK;QACRA,KAAK,GAAG,gBAAgB;QACxB;MACF,KAAK,QAAQ;QACXA,KAAK,GAAG,sBAAsB;QAC9B;MACF,KAAK,KAAK;QACRA,KAAK,GAAG,gBAAgB;QACxB;MACF,KAAK,KAAK;QACRA,KAAK,GAAG,sBAAsB;QAC9B;MACF,KAAK,UAAU;QACbA,KAAK,GAAG,eAAe;QACvB;MACF,KAAK,QAAQ;QACXA,KAAK,GAAG,aAAa;QACrB;MACF;QACEA,KAAK,GAAG,MAAM;QACd;;IAGJ,OAAO,OAAO,GAAGA,KAAK;IACxB;EACA;;;AA/CWH,oBAAoB,C;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB,C;;QAApBA,oBAAoB;EAAAI,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}